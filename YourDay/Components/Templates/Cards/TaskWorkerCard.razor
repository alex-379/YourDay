<button @onclick="() => OpenModal(Task.Id)"></button>

<div class="container-buttons">
    <a href="./task/@Task.Id">
        <div class="taskWorker-card">
            <p>@Task.Title </p>
            @if (Task.Specialization != null)
            {
                <p>@Task.Specialization.Name</p>
            }
            <p>@Task.TimeStart.ToShortTimeString() - @Task.TimeEnd.ToShortTimeString()</p>
            <p>@Task.TimeStart - @Task.TimeEnd</p>
            <p>@getStatusNameByIndex((int)Task.Status)</p>
        </div>
    </a>
</div>

@code {
    [Parameter]
    public TaskOutputModelAllInfo Task { get; set; }

    [Parameter] public EventCallback<int> OnOpenModal { get; set; }

    private async Task OpenModal(int id)
    {
        await OnOpenModal.InvokeAsync(id);
    }

    private IEnumService _enumService;

    public TaskCard()
    {
        _enumService = new EnumService();
    }

    public string getStatusNameByIndex(int index)
    {
        string statusName = "";

        switch (index)
        {
            case 0:
                statusName = _enumService.GetDisplayName(StatusUI.Received);

                break;
            case 1:
                statusName = _enumService.GetDisplayName(StatusUI.InProgress);

                break;
            case 2:
                statusName = _enumService.GetDisplayName(StatusUI.Completed);

                break;
            case 3:
                statusName = _enumService.GetDisplayName(StatusUI.Canselled);

                break;
        }

        return statusName;
    }
}